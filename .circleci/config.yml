version: 2
jobs:
  # test:
  #   docker:
  #     - image: node:12.13-alpine

  #   working_directory: ~/usr/src/app

  #   steps:
  #     - checkout

  #     - restore_cache:
  #         keys:
  #           - v1-dependencies-{{ checksum "package.json" }}
  #           # fallback to using the latest cache if no exact match is found
  #           - v1-dependencies-

  #     - run: yarn install

  #     - save_cache:
  #         paths:
  #           - node_modules
  #         key: v1-dependencies-{{ checksum "package.json" }}

  #     - run: yarn typeorm migration:generate -n init
  #     - run: yarn typeorm migration:run
  #     #!add rollback!
  #     - run: yarn test:e2e-ci

  # build:
  #   docker:
  #     - image: alpine:3.7

  #   steps:
  #     - checkout
  #     - setup_remote_docker
  #     - run: apk add --no-cache curl
  #     - run:
  #         name: Install Docker client
  #         command: |
  #           set -x
  #           VER="18.06.3-ce"
  #           curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
  #           tar -xz -C /tmp -f /tmp/docker-$VER.tgz
  #           mv /tmp/docker/* /usr/bin/
  #     - run: docker build -t artgurianov/voicy:latest --no-cache .
  #     - run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
  #     - run: docker push artgurianov/voicy:latest

  deploy:
    docker:
      - image: alpine:3.7
    steps:
      - checkout
      - run: apk add --no-cache openssh
      - add_ssh_keys:
          fingerprints:
            - 'c8:8d:0b:07:29:52:ca:fd:da:f6:33:89:ba:0f:38:da'
      - run: ssh-keyscan -H 164.90.224.15 >> ~/.ssh/known_hosts
      - run: echo '  ClientAliveInterval 1200' >> ~/.ssh/config
      - run: echo '  ClientAliveCountMax 3' >> ~/.ssh/config
      - run: cat ~/.ssh/config
      - run: ls ~/.ssh
      # - run: ssh -t dokku@164.90.224.15 docker-direct pull artgurianov/voicy:latest
      # - run: ssh -t dokku@164.90.224.15 docker-direct tag artgurianov/voicy:latest dokku/voicy:latest
      # - run: ssh -t tags:deploy voicy latest

# workflows:
#   version: 2
#   test-build-deploy:
#     jobs:
#       - test:
#           context: voicy
#       - build:
#           context: voicy
#           requires:
#             - test
#       - deploy:
#           context: voicy
#           requires:
#             - test
#             - build

workflows:
  version: 2
  ssh-connect:
    jobs:
      - deploy:
          context: voicy
